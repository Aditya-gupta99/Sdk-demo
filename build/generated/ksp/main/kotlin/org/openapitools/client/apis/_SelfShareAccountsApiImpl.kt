// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.`internal`.KtorfitInterface
import de.jensklingenberg.ktorfit.`internal`.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.GetShareAccountsClientIdProductIdResponse
import org.openapitools.client.models.PostNewShareApplicationResponse

@OptIn(InternalKtorfitApi::class)
public class _SelfShareAccountsApiImpl : SelfShareAccountsApi, KtorfitInterface {
  override lateinit var _converter: KtorfitConverterHelper

  override suspend fun createAccount1(body: String?): List<PostNewShareApplicationResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/self/shareaccounts")
        }
        setBody(body) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "kotlin.collections.List<org.openapitools.client.models.PostNewShareApplicationResponse>",
    typeInfo =
        typeInfo<kotlin.collections.List<org.openapitools.client.models.PostNewShareApplicationResponse>>())

    return _converter.suspendRequest<kotlin.collections.List<org.openapitools.client.models.PostNewShareApplicationResponse>,
        org.openapitools.client.models.PostNewShareApplicationResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveShareAccount(accountId: Long): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/self/shareaccounts/${"$accountId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun template19(clientId: Long?, productId: Long?):
      List<GetShareAccountsClientIdProductIdResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/self/shareaccounts/template")
        clientId?.let{ parameter("clientId", "$it") }
        productId?.let{ parameter("productId", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "kotlin.collections.List<org.openapitools.client.models.GetShareAccountsClientIdProductIdResponse>",
    typeInfo =
        typeInfo<kotlin.collections.List<org.openapitools.client.models.GetShareAccountsClientIdProductIdResponse>>())

    return _converter.suspendRequest<kotlin.collections.List<org.openapitools.client.models.GetShareAccountsClientIdProductIdResponse>,
        org.openapitools.client.models.GetShareAccountsClientIdProductIdResponse>(_typeData,_ext)!!
  }
}

public fun Ktorfit.createSelfShareAccountsApi(): SelfShareAccountsApi =
    this.create(_SelfShareAccountsApiImpl().apply { _converter=
    KtorfitConverterHelper(this@createSelfShareAccountsApi) })
