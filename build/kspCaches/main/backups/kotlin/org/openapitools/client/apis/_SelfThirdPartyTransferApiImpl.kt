// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.`internal`.KtorfitInterface
import de.jensklingenberg.ktorfit.`internal`.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.DeleteSelfBeneficiariesTPTBeneficiaryIdResponse
import org.openapitools.client.models.GetSelfBeneficiariesTPTResponse
import org.openapitools.client.models.GetSelfBeneficiariesTPTTemplateResponse
import org.openapitools.client.models.PostSelfBeneficiariesTPTRequest
import org.openapitools.client.models.PostSelfBeneficiariesTPTResponse
import org.openapitools.client.models.PutSelfBeneficiariesTPTBeneficiaryIdRequest
import org.openapitools.client.models.PutSelfBeneficiariesTPTBeneficiaryIdResponse

@OptIn(InternalKtorfitApi::class)
public class _SelfThirdPartyTransferApiImpl : SelfThirdPartyTransferApi, KtorfitInterface {
  override lateinit var _converter: KtorfitConverterHelper

  override suspend fun add(postSelfBeneficiariesTPTRequest: PostSelfBeneficiariesTPTRequest):
      PostSelfBeneficiariesTPTResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/self/beneficiaries/tpt")
        }
        setBody(postSelfBeneficiariesTPTRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PostSelfBeneficiariesTPTResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PostSelfBeneficiariesTPTResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostSelfBeneficiariesTPTResponse,
        org.openapitools.client.models.PostSelfBeneficiariesTPTResponse>(_typeData,_ext)!!
  }

  override suspend fun delete22(beneficiaryId: Long):
      DeleteSelfBeneficiariesTPTBeneficiaryIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_converter.baseUrl +
            "v1/self/beneficiaries/tpt/${"$beneficiaryId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.DeleteSelfBeneficiariesTPTBeneficiaryIdResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.DeleteSelfBeneficiariesTPTBeneficiaryIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.DeleteSelfBeneficiariesTPTBeneficiaryIdResponse,
        org.openapitools.client.models.DeleteSelfBeneficiariesTPTBeneficiaryIdResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveAll35(): List<GetSelfBeneficiariesTPTResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/self/beneficiaries/tpt")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "kotlin.collections.List<org.openapitools.client.models.GetSelfBeneficiariesTPTResponse>",
    typeInfo =
        typeInfo<kotlin.collections.List<org.openapitools.client.models.GetSelfBeneficiariesTPTResponse>>())

    return _converter.suspendRequest<kotlin.collections.List<org.openapitools.client.models.GetSelfBeneficiariesTPTResponse>,
        org.openapitools.client.models.GetSelfBeneficiariesTPTResponse>(_typeData,_ext)!!
  }

  override suspend fun template16(): GetSelfBeneficiariesTPTTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/self/beneficiaries/tpt/template")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetSelfBeneficiariesTPTTemplateResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetSelfBeneficiariesTPTTemplateResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetSelfBeneficiariesTPTTemplateResponse,
        org.openapitools.client.models.GetSelfBeneficiariesTPTTemplateResponse>(_typeData,_ext)!!
  }

  override suspend fun update23(beneficiaryId: Long,
      putSelfBeneficiariesTPTBeneficiaryIdRequest: PutSelfBeneficiariesTPTBeneficiaryIdRequest):
      PutSelfBeneficiariesTPTBeneficiaryIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_converter.baseUrl +
            "v1/self/beneficiaries/tpt/${"$beneficiaryId".encodeURLPath()}")
        }
        setBody(putSelfBeneficiariesTPTBeneficiaryIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.PutSelfBeneficiariesTPTBeneficiaryIdResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.PutSelfBeneficiariesTPTBeneficiaryIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PutSelfBeneficiariesTPTBeneficiaryIdResponse,
        org.openapitools.client.models.PutSelfBeneficiariesTPTBeneficiaryIdResponse>(_typeData,_ext)!!
  }
}

public fun Ktorfit.createSelfThirdPartyTransferApi(): SelfThirdPartyTransferApi =
    this.create(_SelfThirdPartyTransferApiImpl().apply { _converter=
    KtorfitConverterHelper(this@createSelfThirdPartyTransferApi) })
