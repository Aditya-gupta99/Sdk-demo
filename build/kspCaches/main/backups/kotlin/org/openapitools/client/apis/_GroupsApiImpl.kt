// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.`internal`.KtorfitInterface
import de.jensklingenberg.ktorfit.`internal`.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.forms.FormDataContent
import io.ktor.client.request.forms.MultiPartFormDataContent
import io.ktor.client.request.forms.formData
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.Parameters
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import okhttp3.MultipartBody
import org.openapitools.client.models.DeleteGroupsGroupIdResponse
import org.openapitools.client.models.GetGroupsGroupIdAccountsResponse
import org.openapitools.client.models.GetGroupsGroupIdResponse
import org.openapitools.client.models.GetGroupsResponse
import org.openapitools.client.models.GetGroupsTemplateResponse
import org.openapitools.client.models.PostGroupsGroupIdCommandUnassignStaffRequest
import org.openapitools.client.models.PostGroupsGroupIdCommandUnassignStaffResponse
import org.openapitools.client.models.PostGroupsGroupIdRequest
import org.openapitools.client.models.PostGroupsGroupIdResponse
import org.openapitools.client.models.PostGroupsRequest
import org.openapitools.client.models.PostGroupsResponse
import org.openapitools.client.models.PutGroupsGroupIdRequest
import org.openapitools.client.models.PutGroupsGroupIdResponse

@OptIn(InternalKtorfitApi::class)
public class _GroupsApiImpl : GroupsApi, KtorfitInterface {
  override lateinit var _converter: KtorfitConverterHelper

  override suspend fun activateOrGenerateCollectionSheet(
    groupId: Long,
    postGroupsGroupIdRequest: PostGroupsGroupIdRequest,
    command: String?,
    roleId: Long?,
  ): PostGroupsGroupIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        roleId?.let{ parameter("roleId", "$it") }
        }
        setBody(postGroupsGroupIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PostGroupsGroupIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PostGroupsGroupIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostGroupsGroupIdResponse,
        org.openapitools.client.models.PostGroupsGroupIdResponse>(_typeData,_ext)!!
  }

  override suspend fun create8(postGroupsRequest: PostGroupsRequest): PostGroupsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/groups")
        }
        setBody(postGroupsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PostGroupsResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PostGroupsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostGroupsResponse,
        org.openapitools.client.models.PostGroupsResponse>(_typeData,_ext)!!
  }

  override suspend fun delete12(groupId: Long): DeleteGroupsGroupIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.DeleteGroupsGroupIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.DeleteGroupsGroupIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.DeleteGroupsGroupIdResponse,
        org.openapitools.client.models.DeleteGroupsGroupIdResponse>(_typeData,_ext)!!
  }

  override suspend fun getGroupsTemplate(
    officeId: Long?,
    staffId: Long?,
    dateFormat: String?,
  ) {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/downloadtemplate")
        officeId?.let{ parameter("officeId", "$it") }
        staffId?.let{ parameter("staffId", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.Unit",
    typeInfo = typeInfo<kotlin.Unit>())

    return _converter.suspendRequest<kotlin.Unit, kotlin.Unit>(_typeData,_ext)!!
  }

  override suspend fun postGroupTemplate(
    dateFormat: String,
    locale: String,
    uploadedInputStream: MultipartBody.Part,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/uploadtemplate")
        }
        val __formData = formData {
        dateFormat?.let{ append("dateFormat", "${it}") }
        locale?.let{ append("locale", "${it}") }
        uploadedInputStream?.let{ append("", "${it}") }
        }
        setBody(MultiPartFormDataContent(__formData))
         
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun retrieveAccounts(groupId: Long): GetGroupsGroupIdAccountsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}/accounts")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetGroupsGroupIdAccountsResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetGroupsGroupIdAccountsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetGroupsGroupIdAccountsResponse,
        org.openapitools.client.models.GetGroupsGroupIdAccountsResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveAll24(
    officeId: Long?,
    staffId: Long?,
    externalId: String?,
    name: String?,
    underHierarchy: String?,
    paged: Boolean?,
    offset: Int?,
    limit: Int?,
    orderBy: String?,
    sortOrder: String?,
    orphansOnly: Boolean?,
  ): GetGroupsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups")
        officeId?.let{ parameter("officeId", "$it") }
        staffId?.let{ parameter("staffId", "$it") }
        externalId?.let{ parameter("externalId", "$it") }
        name?.let{ parameter("name", "$it") }
        underHierarchy?.let{ parameter("underHierarchy", "$it") }
        paged?.let{ parameter("paged", "$it") }
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        orderBy?.let{ parameter("orderBy", "$it") }
        sortOrder?.let{ parameter("sortOrder", "$it") }
        orphansOnly?.let{ parameter("orphansOnly", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetGroupsResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetGroupsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetGroupsResponse,
        org.openapitools.client.models.GetGroupsResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveGsimAccounts(
    groupId: Long,
    parentGSIMAccountNo: String?,
    parentGSIMId: Long?,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}/gsimaccounts")
        parentGSIMAccountNo?.let{ parameter("parentGSIMAccountNo", "$it") }
        parentGSIMId?.let{ parameter("parentGSIMId", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun retrieveOne15(
    groupId: Long,
    staffInSelectedOfficeOnly: Boolean?,
    roleId: Long?,
  ): GetGroupsGroupIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}")
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        roleId?.let{ parameter("roleId", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetGroupsGroupIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetGroupsGroupIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetGroupsGroupIdResponse,
        org.openapitools.client.models.GetGroupsGroupIdResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveTemplate7(
    officeId: Long?,
    center: Boolean?,
    centerId: Long?,
    command: String?,
    staffInSelectedOfficeOnly: Boolean?,
  ): GetGroupsTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/template")
        officeId?.let{ parameter("officeId", "$it") }
        center?.let{ parameter("center", "$it") }
        centerId?.let{ parameter("centerId", "$it") }
        command?.let{ parameter("command", "$it") }
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetGroupsTemplateResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetGroupsTemplateResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetGroupsTemplateResponse,
        org.openapitools.client.models.GetGroupsTemplateResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveglimAccounts(groupId: Long, parentLoanAccountNo: String?): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}/glimaccounts")
        parentLoanAccountNo?.let{ parameter("parentLoanAccountNo", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun unassignLoanOfficer(groupId: Long,
      postGroupsGroupIdCommandUnassignStaffRequest: PostGroupsGroupIdCommandUnassignStaffRequest):
      PostGroupsGroupIdCommandUnassignStaffResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl +
            "v1/groups/${"$groupId".encodeURLPath()}/command/unassign_staff")
        }
        setBody(postGroupsGroupIdCommandUnassignStaffRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.PostGroupsGroupIdCommandUnassignStaffResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.PostGroupsGroupIdCommandUnassignStaffResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostGroupsGroupIdCommandUnassignStaffResponse,
        org.openapitools.client.models.PostGroupsGroupIdCommandUnassignStaffResponse>(_typeData,_ext)!!
  }

  override suspend fun update13(groupId: Long, putGroupsGroupIdRequest: PutGroupsGroupIdRequest):
      PutGroupsGroupIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_converter.baseUrl + "v1/groups/${"$groupId".encodeURLPath()}")
        }
        setBody(putGroupsGroupIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PutGroupsGroupIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PutGroupsGroupIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PutGroupsGroupIdResponse,
        org.openapitools.client.models.PutGroupsGroupIdResponse>(_typeData,_ext)!!
  }
}

public fun Ktorfit.createGroupsApi(): GroupsApi = this.create(_GroupsApiImpl().apply { _converter=
    KtorfitConverterHelper(this@createGroupsApi) })
