// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.`internal`.KtorfitInterface
import de.jensklingenberg.ktorfit.`internal`.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.forms.FormDataContent
import io.ktor.client.request.forms.MultiPartFormDataContent
import io.ktor.client.request.forms.formData
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.Parameters
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import okhttp3.MultipartBody
import org.openapitools.client.models.DeleteFixedDepositAccountsAccountIdResponse
import org.openapitools.client.models.GetFixedDepositAccountsAccountIdResponse
import org.openapitools.client.models.GetFixedDepositAccountsResponse
import org.openapitools.client.models.GetFixedDepositAccountsTemplateResponse
import org.openapitools.client.models.PostFixedDepositAccountsAccountIdResponse
import org.openapitools.client.models.PostFixedDepositAccountsRequest
import org.openapitools.client.models.PostFixedDepositAccountsResponse
import org.openapitools.client.models.PutFixedDepositAccountsAccountIdRequest
import org.openapitools.client.models.PutFixedDepositAccountsAccountIdResponse

@OptIn(InternalKtorfitApi::class)
public class _FixedDepositAccountApiImpl : FixedDepositAccountApi, KtorfitInterface {
  override lateinit var _converter: KtorfitConverterHelper

  override suspend fun accountClosureTemplate(accountId: Long, command: String?): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl +
            "v1/fixeddepositaccounts/${"$accountId".encodeURLPath()}/template")
        command?.let{ parameter("command", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun delete15(accountId: Long): DeleteFixedDepositAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/${"$accountId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.DeleteFixedDepositAccountsAccountIdResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.DeleteFixedDepositAccountsAccountIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.DeleteFixedDepositAccountsAccountIdResponse,
        org.openapitools.client.models.DeleteFixedDepositAccountsAccountIdResponse>(_typeData,_ext)!!
  }

  override suspend fun getFixedDepositTemplate(
    officeId: Long?,
    staffId: Long?,
    dateFormat: String?,
  ) {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/downloadtemplate")
        officeId?.let{ parameter("officeId", "$it") }
        staffId?.let{ parameter("staffId", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.Unit",
    typeInfo = typeInfo<kotlin.Unit>())

    return _converter.suspendRequest<kotlin.Unit, kotlin.Unit>(_typeData,_ext)!!
  }

  override suspend fun getFixedDepositTransactionTemplate(officeId: Long?, dateFormat: String?) {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/transaction/downloadtemplate")
        officeId?.let{ parameter("officeId", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.Unit",
    typeInfo = typeInfo<kotlin.Unit>())

    return _converter.suspendRequest<kotlin.Unit, kotlin.Unit>(_typeData,_ext)!!
  }

  override suspend fun handleCommands4(
    accountId: Long,
    body: Any,
    command: String?,
  ): PostFixedDepositAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/${"$accountId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(body) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PostFixedDepositAccountsAccountIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PostFixedDepositAccountsAccountIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostFixedDepositAccountsAccountIdResponse,
        org.openapitools.client.models.PostFixedDepositAccountsAccountIdResponse>(_typeData,_ext)!!
  }

  override suspend fun postFixedDepositTemplate(
    dateFormat: String,
    locale: String,
    uploadedInputStream: MultipartBody.Part,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/uploadtemplate")
        }
        val __formData = formData {
        dateFormat?.let{ append("dateFormat", "${it}") }
        locale?.let{ append("locale", "${it}") }
        uploadedInputStream?.let{ append("", "${it}") }
        }
        setBody(MultiPartFormDataContent(__formData))
         
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun postFixedDepositTransactionTemplate(
    dateFormat: String,
    locale: String,
    uploadedInputStream: MultipartBody.Part,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/transaction/uploadtemplate")
        }
        val __formData = formData {
        dateFormat?.let{ append("dateFormat", "${it}") }
        locale?.let{ append("locale", "${it}") }
        uploadedInputStream?.let{ append("", "${it}") }
        }
        setBody(MultiPartFormDataContent(__formData))
         
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun retrieveAll29(
    paged: Boolean?,
    offset: Int?,
    limit: Int?,
    orderBy: String?,
    sortOrder: String?,
  ): List<GetFixedDepositAccountsResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts")
        paged?.let{ parameter("paged", "$it") }
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        orderBy?.let{ parameter("orderBy", "$it") }
        sortOrder?.let{ parameter("sortOrder", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "kotlin.collections.List<org.openapitools.client.models.GetFixedDepositAccountsResponse>",
    typeInfo =
        typeInfo<kotlin.collections.List<org.openapitools.client.models.GetFixedDepositAccountsResponse>>())

    return _converter.suspendRequest<kotlin.collections.List<org.openapitools.client.models.GetFixedDepositAccountsResponse>,
        org.openapitools.client.models.GetFixedDepositAccountsResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveOne19(
    accountId: Long,
    staffInSelectedOfficeOnly: Boolean?,
    chargeStatus: String?,
  ): GetFixedDepositAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/${"$accountId".encodeURLPath()}")
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        chargeStatus?.let{ parameter("chargeStatus", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetFixedDepositAccountsAccountIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetFixedDepositAccountsAccountIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetFixedDepositAccountsAccountIdResponse,
        org.openapitools.client.models.GetFixedDepositAccountsAccountIdResponse>(_typeData,_ext)!!
  }

  override suspend
      fun submitApplication(postFixedDepositAccountsRequest: PostFixedDepositAccountsRequest):
      PostFixedDepositAccountsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts")
        }
        setBody(postFixedDepositAccountsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PostFixedDepositAccountsResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PostFixedDepositAccountsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostFixedDepositAccountsResponse,
        org.openapitools.client.models.PostFixedDepositAccountsResponse>(_typeData,_ext)!!
  }

  override suspend fun template12(
    clientId: Long?,
    groupId: Long?,
    productId: Long?,
    staffInSelectedOfficeOnly: Boolean?,
  ): GetFixedDepositAccountsTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/template")
        clientId?.let{ parameter("clientId", "$it") }
        groupId?.let{ parameter("groupId", "$it") }
        productId?.let{ parameter("productId", "$it") }
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetFixedDepositAccountsTemplateResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetFixedDepositAccountsTemplateResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetFixedDepositAccountsTemplateResponse,
        org.openapitools.client.models.GetFixedDepositAccountsTemplateResponse>(_typeData,_ext)!!
  }

  override suspend fun update16(accountId: Long,
      putFixedDepositAccountsAccountIdRequest: PutFixedDepositAccountsAccountIdRequest):
      PutFixedDepositAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositaccounts/${"$accountId".encodeURLPath()}")
        }
        setBody(putFixedDepositAccountsAccountIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PutFixedDepositAccountsAccountIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PutFixedDepositAccountsAccountIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PutFixedDepositAccountsAccountIdResponse,
        org.openapitools.client.models.PutFixedDepositAccountsAccountIdResponse>(_typeData,_ext)!!
  }
}

public fun Ktorfit.createFixedDepositAccountApi(): FixedDepositAccountApi =
    this.create(_FixedDepositAccountApiImpl().apply { _converter=
    KtorfitConverterHelper(this@createFixedDepositAccountApi) })
