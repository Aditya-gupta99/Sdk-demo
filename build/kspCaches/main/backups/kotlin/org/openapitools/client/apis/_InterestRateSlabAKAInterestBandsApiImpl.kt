// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.`internal`.KtorfitInterface
import de.jensklingenberg.ktorfit.`internal`.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.DeleteInterestRateChartsChartIdChartSlabsResponse
import org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse
import org.openapitools.client.models.PostInterestRateChartsChartIdChartSlabsRequest
import org.openapitools.client.models.PostInterestRateChartsChartIdChartSlabsResponse
import org.openapitools.client.models.PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest
import org.openapitools.client.models.PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse

@OptIn(InternalKtorfitApi::class)
public class _InterestRateSlabAKAInterestBandsApiImpl : InterestRateSlabAKAInterestBandsApi,
    KtorfitInterface {
  override lateinit var _converter: KtorfitConverterHelper

  override suspend fun create9(chartId: Long,
      postInterestRateChartsChartIdChartSlabsRequest: PostInterestRateChartsChartIdChartSlabsRequest):
      PostInterestRateChartsChartIdChartSlabsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl +
            "v1/interestratecharts/${"$chartId".encodeURLPath()}/chartslabs")
        }
        setBody(postInterestRateChartsChartIdChartSlabsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.PostInterestRateChartsChartIdChartSlabsResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.PostInterestRateChartsChartIdChartSlabsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostInterestRateChartsChartIdChartSlabsResponse,
        org.openapitools.client.models.PostInterestRateChartsChartIdChartSlabsResponse>(_typeData,_ext)!!
  }

  override suspend fun delete13(chartId: Long, chartSlabId: Long):
      DeleteInterestRateChartsChartIdChartSlabsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_converter.baseUrl +
            "v1/interestratecharts/${"$chartId".encodeURLPath()}/chartslabs/${"$chartSlabId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.DeleteInterestRateChartsChartIdChartSlabsResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.DeleteInterestRateChartsChartIdChartSlabsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.DeleteInterestRateChartsChartIdChartSlabsResponse,
        org.openapitools.client.models.DeleteInterestRateChartsChartIdChartSlabsResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveAll25(chartId: Long):
      List<GetInterestRateChartsChartIdChartSlabsResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl +
            "v1/interestratecharts/${"$chartId".encodeURLPath()}/chartslabs")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "kotlin.collections.List<org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse>",
    typeInfo =
        typeInfo<kotlin.collections.List<org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse>>())

    return _converter.suspendRequest<kotlin.collections.List<org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse>,
        org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveOne16(chartId: Long, chartSlabId: Long):
      GetInterestRateChartsChartIdChartSlabsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl +
            "v1/interestratecharts/${"$chartId".encodeURLPath()}/chartslabs/${"$chartSlabId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse,
        org.openapitools.client.models.GetInterestRateChartsChartIdChartSlabsResponse>(_typeData,_ext)!!
  }

  override suspend fun template8(chartId: Long): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl +
            "v1/interestratecharts/${"$chartId".encodeURLPath()}/chartslabs/template")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun update14(
    chartId: Long,
    chartSlabId: Long,
    putInterestRateChartsChartIdChartSlabsChartSlabIdRequest: PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest,
  ): PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_converter.baseUrl +
            "v1/interestratecharts/${"$chartId".encodeURLPath()}/chartslabs/${"$chartSlabId".encodeURLPath()}")
        }
        setBody(putInterestRateChartsChartIdChartSlabsChartSlabIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse,
        org.openapitools.client.models.PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse>(_typeData,_ext)!!
  }
}

public fun Ktorfit.createInterestRateSlabAKAInterestBandsApi(): InterestRateSlabAKAInterestBandsApi
    = this.create(_InterestRateSlabAKAInterestBandsApiImpl().apply { _converter=
    KtorfitConverterHelper(this@createInterestRateSlabAKAInterestBandsApi) })
