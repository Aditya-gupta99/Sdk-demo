// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.`internal`.KtorfitInterface
import de.jensklingenberg.ktorfit.`internal`.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.DeleteFixedDepositProductsProductIdResponse
import org.openapitools.client.models.GetFixedDepositProductsProductIdResponse
import org.openapitools.client.models.GetFixedDepositProductsResponse
import org.openapitools.client.models.PostFixedDepositProductsRequest
import org.openapitools.client.models.PostFixedDepositProductsResponse
import org.openapitools.client.models.PutFixedDepositProductsProductIdRequest
import org.openapitools.client.models.PutFixedDepositProductsProductIdResponse

@OptIn(InternalKtorfitApi::class)
public class _FixedDepositProductApiImpl : FixedDepositProductApi, KtorfitInterface {
  override lateinit var _converter: KtorfitConverterHelper

  override suspend fun create11(postFixedDepositProductsRequest: PostFixedDepositProductsRequest):
      PostFixedDepositProductsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositproducts")
        }
        setBody(postFixedDepositProductsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PostFixedDepositProductsResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PostFixedDepositProductsResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PostFixedDepositProductsResponse,
        org.openapitools.client.models.PostFixedDepositProductsResponse>(_typeData,_ext)!!
  }

  override suspend fun delete16(productId: Long): DeleteFixedDepositProductsProductIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositproducts/${"$productId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "org.openapitools.client.models.DeleteFixedDepositProductsProductIdResponse",
    typeInfo =
        typeInfo<org.openapitools.client.models.DeleteFixedDepositProductsProductIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.DeleteFixedDepositProductsProductIdResponse,
        org.openapitools.client.models.DeleteFixedDepositProductsProductIdResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveAll30(): List<GetFixedDepositProductsResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositproducts")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename =
        "kotlin.collections.List<org.openapitools.client.models.GetFixedDepositProductsResponse>",
    typeInfo =
        typeInfo<kotlin.collections.List<org.openapitools.client.models.GetFixedDepositProductsResponse>>())

    return _converter.suspendRequest<kotlin.collections.List<org.openapitools.client.models.GetFixedDepositProductsResponse>,
        org.openapitools.client.models.GetFixedDepositProductsResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveOne20(productId: Long): GetFixedDepositProductsProductIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositproducts/${"$productId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.GetFixedDepositProductsProductIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.GetFixedDepositProductsProductIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.GetFixedDepositProductsProductIdResponse,
        org.openapitools.client.models.GetFixedDepositProductsProductIdResponse>(_typeData,_ext)!!
  }

  override suspend fun retrieveTemplate15(): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositproducts/template")
        } 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "kotlin.String",
    typeInfo = typeInfo<kotlin.String>())

    return _converter.suspendRequest<kotlin.String, kotlin.String>(_typeData,_ext)!!
  }

  override suspend fun update17(productId: Long,
      putFixedDepositProductsProductIdRequest: PutFixedDepositProductsProductIdRequest):
      PutFixedDepositProductsProductIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_converter.baseUrl + "v1/fixeddepositproducts/${"$productId".encodeURLPath()}")
        }
        setBody(putFixedDepositProductsProductIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    qualifiedTypename = "org.openapitools.client.models.PutFixedDepositProductsProductIdResponse",
    typeInfo = typeInfo<org.openapitools.client.models.PutFixedDepositProductsProductIdResponse>())

    return _converter.suspendRequest<org.openapitools.client.models.PutFixedDepositProductsProductIdResponse,
        org.openapitools.client.models.PutFixedDepositProductsProductIdResponse>(_typeData,_ext)!!
  }
}

public fun Ktorfit.createFixedDepositProductApi(): FixedDepositProductApi =
    this.create(_FixedDepositProductApiImpl().apply { _converter=
    KtorfitConverterHelper(this@createFixedDepositProductApi) })
