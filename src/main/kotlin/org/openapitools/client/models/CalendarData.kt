/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.EnumOptionData

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param calendarInstanceId 
 * @param calendarTypeOptions 
 * @param centerId 
 * @param createdByUserId 
 * @param createdByUsername 
 * @param createdDate 
 * @param dateFormat 
 * @param description 
 * @param duration 
 * @param endDate 
 * @param entityId 
 * @param entityType 
 * @param entityTypeOptions 
 * @param firstReminder 
 * @param frequency 
 * @param frequencyNthDayTypeOptions 
 * @param frequencyOptions 
 * @param humanReadable 
 * @param id 
 * @param interval 
 * @param lastUpdatedByUserId 
 * @param lastUpdatedByUsername 
 * @param lastUpdatedDate 
 * @param locale 
 * @param location 
 * @param meetingTime 
 * @param nextTenRecurringDates 
 * @param recentEligibleMeetingDate 
 * @param recurrence 
 * @param recurringDates 
 * @param remindBy 
 * @param remindByOptions 
 * @param repeating 
 * @param repeatsOnDay 
 * @param repeatsOnDayOfMonth 
 * @param repeatsOnDayOptions 
 * @param repeatsOnNthDayOfMonth 
 * @param rowIndex 
 * @param secondReminder 
 * @param startDate 
 * @param title 
 * @param type 
 * @param typeId 
 */


data class CalendarData (

    @Json(name = "calendarInstanceId")
    val calendarInstanceId: kotlin.Long? = null,

    @Json(name = "calendarTypeOptions")
    val calendarTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "centerId")
    val centerId: kotlin.String? = null,

    @Json(name = "createdByUserId")
    val createdByUserId: kotlin.Long? = null,

    @Json(name = "createdByUsername")
    val createdByUsername: kotlin.String? = null,

    @Json(name = "createdDate")
    val createdDate: java.time.OffsetDateTime? = null,

    @Json(name = "dateFormat")
    val dateFormat: kotlin.String? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "duration")
    val duration: kotlin.Int? = null,

    @Json(name = "endDate")
    val endDate: java.time.LocalDate? = null,

    @Json(name = "entityId")
    val entityId: kotlin.Long? = null,

    @Json(name = "entityType")
    val entityType: EnumOptionData? = null,

    @Json(name = "entityTypeOptions")
    val entityTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "firstReminder")
    val firstReminder: kotlin.Int? = null,

    @Json(name = "frequency")
    val frequency: EnumOptionData? = null,

    @Json(name = "frequencyNthDayTypeOptions")
    val frequencyNthDayTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "frequencyOptions")
    val frequencyOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "humanReadable")
    val humanReadable: kotlin.String? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "interval")
    val interval: kotlin.Int? = null,

    @Json(name = "lastUpdatedByUserId")
    val lastUpdatedByUserId: kotlin.Long? = null,

    @Json(name = "lastUpdatedByUsername")
    val lastUpdatedByUsername: kotlin.String? = null,

    @Json(name = "lastUpdatedDate")
    val lastUpdatedDate: java.time.OffsetDateTime? = null,

    @Json(name = "locale")
    val locale: kotlin.String? = null,

    @Json(name = "location")
    val location: kotlin.String? = null,

    @Json(name = "meetingTime")
    val meetingTime: java.time.LocalTime? = null,

    @Json(name = "nextTenRecurringDates")
    val nextTenRecurringDates: kotlin.collections.List<java.time.LocalDate>? = null,

    @Json(name = "recentEligibleMeetingDate")
    val recentEligibleMeetingDate: java.time.LocalDate? = null,

    @Json(name = "recurrence")
    val recurrence: kotlin.String? = null,

    @Json(name = "recurringDates")
    val recurringDates: kotlin.collections.List<java.time.LocalDate>? = null,

    @Json(name = "remindBy")
    val remindBy: EnumOptionData? = null,

    @Json(name = "remindByOptions")
    val remindByOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "repeating")
    val repeating: kotlin.Boolean? = null,

    @Json(name = "repeatsOnDay")
    val repeatsOnDay: EnumOptionData? = null,

    @Json(name = "repeatsOnDayOfMonth")
    val repeatsOnDayOfMonth: kotlin.Int? = null,

    @Json(name = "repeatsOnDayOptions")
    val repeatsOnDayOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "repeatsOnNthDayOfMonth")
    val repeatsOnNthDayOfMonth: EnumOptionData? = null,

    @Json(name = "rowIndex")
    val rowIndex: kotlin.Int? = null,

    @Json(name = "secondReminder")
    val secondReminder: kotlin.Int? = null,

    @Json(name = "startDate")
    val startDate: java.time.LocalDate? = null,

    @Json(name = "title")
    val title: kotlin.String? = null,

    @Json(name = "type")
    val type: EnumOptionData? = null,

    @Json(name = "typeId")
    val typeId: kotlin.String? = null

) {


}

